#########
Responses
#########

This section describes the dictionary structure of each response.

Every response has a number of attributes you can use. For example:

.. code-block:: python

    >>> match = api.get_match_details(match_id=1000193456)

The following will return the URL constructed by the library:

.. code-block:: python

    >>> match.url

The following will return the response as raw json:

.. code-block:: python

    >>> match.json

*******************
get_match_history()
*******************

Returns a dictionary with a list of ``players`` within.

* ``num_results``
* ``total_results``
* ``results_remaining``
* ``matches``
* ``match_id``
* ``match_seq_num``
* ``start_time``
* ``lobby_type``
* ``players``

    * ``account_id``
    * ``player_slot``
    * ``hero_id``


******************************
get_match_history_by_seq_num()
******************************

Returns a dictionary with a list of ``matches`` within.

* ``status``
* ``matches``
* ``players``

    * ``account_id``
    * ``player_slot``
    * ``hero_id``
    * ``hero_name``
    * ``item_0``
    * ``item_0_name``
    * ``item_1``
    * ``item_1_name``
    * ``item_2``
    * ``item_2_name``
    * ``item_3``
    * ``item_3_name``
    * ``item_4``
    * ``item_4_name``
    * ``item_5``
    * ``item_5_name``
    * ``kills``
    * ``deaths``
    * ``assists``
    * ``leaver_status``
    * ``gold``
    * ``last_hits``
    * ``denies``
    * ``gold_per_min``
    * ``xp_per_min``
    * ``gold_spent``
    * ``hero_damage``
    * ``tower_damage``
    * ``hero_healing``
    * ``level``
    * ``ability_upgrades``

        * ``ability``
        * ``time``
        * ``level``

    * ``additional_units`` - Only available if the player has a additional unit (ie Lone Druids Spirit Bear).

        * ``unitname``
        * ``item_0``
        * ``item_1``
        * ``item_2``
        * ``item_3``
        * ``item_4``
        * ``item_5``

* ``season``
* ``radiant_win``
* ``duration``
* ``start_time``
* ``match_id``
* ``match_seq_num``
* ``tower_status_radiant``
* ``tower_status_dire``
* ``barracks_status_radiant``
* ``barracks_status_radiant``
* ``cluster``
* ``cluster_name``
* ``first_blood_time``
* ``lobby_type``
* ``lobby_name``
* ``human_players``
* ``leagueid``
* ``positive_votes``
* ``positive_votes``
* ``game_mode``
* ``game_mode_name``

The following are available for team matches only:

* ``radiant_name``
* ``radiant_logo``
* ``radiant_team_complete``
* ``dire_name``
* ``dire_logo``
* ``dire_team_complete``

*******************
get_match_details()
*******************

Returns a dictionary with a list of ``players`` within.

* ``players``
    * ``account_id``
    * ``player_slot``
    * ``hero_id``
    * ``hero_name``
    * ``item_0``
    * ``item_0_name``
    * ``item_1``
    * ``item_1_name``
    * ``item_2``
    * ``item_2_name``
    * ``item_3``
    * ``item_3_name``
    * ``item_4``
    * ``item_4_name``
    * ``item_5``
    * ``item_5_name``
    * ``kills``
    * ``deaths``
    * ``assists``
    * ``leaver_status``
    * ``gold``
    * ``last_hits``
    * ``denies``
    * ``gold_per_min``
    * ``xp_per_min``
    * ``gold_spent``
    * ``hero_damage``
    * ``tower_damage``
    * ``hero_healing``
    * ``level``
    * ``ability_upgrades``

        * ``ability``
        * ``time``
        * ``level``

    * ``additional_units`` - Only available if the player has a additional unit (ie Lone Druids Spirit Bear).

        * ``unitname``
        * ``item_0``
        * ``item_1``
        * ``item_2``
        * ``item_3``
        * ``item_4``
        * ``item_5``

* ``season``
* ``radiant_win``
* ``duration``
* ``start_time``
* ``match_id``
* ``match_seq_num``
* ``tower_status_radiant``
* ``tower_status_dire``
* ``barracks_status_radiant``
* ``barracks_status_radiant``
* ``cluster``
* ``cluster_name``
* ``first_blood_time``
* ``lobby_type``
* ``lobby_name``
* ``human_players``
* ``leagueid``
* ``positive_votes``
* ``positive_votes``
* ``game_mode``
* ``game_mode_name``

The following are available for team matches only:

* ``radiant_name``
* ``radiant_logo``
* ``radiant_team_complete``
* ``dire_name``
* ``dire_logo``
* ``dire_team_complete``

*******************
get_all_matches_for_user()
*******************

Tries to return a array containing match details for all matches for a user ID by querying for each hero.

The max number of results returned by valve's API is 500, so if there are more than 500 matches for a certain hero, only the most recent 500 will be returned.


********************
get_league_listing()
********************

Returns a dictionary with a list of ``leagues`` within.

* ``leagues``
    * ``name``
    * ``leagueid``
    * ``description``
    * ``tournament_url``

***********************
get_live_league_games()
***********************

Returns a dictionary with a list of ``leagues`` within.

* ``games``
    * ``players``

        * ``account_id``
        * ``name``
        * ``hero_id``
        * ``team``

    * ``radiant_team``

        * ``team_name``
        * ``team_id``
        * ``team_logo``
        * ``complete``

    * ``dire_team``
        * ``team_name``
        * ``team_id``
        * ``team_logo``
        * ``complete``

    * ``lobby_id``
    * ``spectators``
    * ``tower_state``
    * ``league_id``

**************************
get_team_info_by_team_id()
**************************

Returns a dictionary with a list of ``teams`` within.

* ``teams``
    * ``team_id``
    * ``name``
    * ``tag``
    * ``time_created``
    * ``rating``
    * ``logo``
    * ``logo_sponsor``
    * ``country_code``
    * ``url``
    * ``games_played_with_current_roster``
    * ``player_0_account_id``
    * ``player_1_account_id``
    * ``player_3_account_id``
    * ``player_4_account_id``
    * ``player_5_account_id``
    * ``admin_account_id``

**********************
get_player_summaries()
**********************

Returns a dictionary with a list of ``players`` within.

* ``players``
    * ``avatarfull``
    * ``avatarmedium``
    * ``commentpermission``
    * ``communityvisibilitystate``
    * ``lastlogoff``
    * ``loccityid``
    * ``loccountrycode``
    * ``locstatecode``
    * ``personaname``
    * ``personastate``
    * ``personastateflags``
    * ``primaryclanid``
    * ``profilestate``
    * ``profileurl``
    * ``realname``
    * ``steamid``
    * ``timecreated``

************
get_heroes()
************

* ``count``
* ``status``
* ``heroes``

    * ``id``
    * ``name``
    * ``localized_name``

****************
get_game_items()
****************

* ``count``
* ``status``
* ``items``

    * ``id``
    * ``name``
    * ``cost``
    * ``localized_name``
    * ``recipe``
    * ``secret_shop``
    * ``side_shop``

***************************
get_tournament_prize_pool()
***************************

* ``league_id``
* ``prizepool``
* ``status``